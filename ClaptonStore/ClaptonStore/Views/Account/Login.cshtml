@using ClaptonStore.Models.BindingModels
@using ClaptonStore.Models.Identity
@using Microsoft.AspNetCore.Identity

@model LoginBindingModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Login";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-6">
        <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
            <fieldset>
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <i class="fa fa-user"></i> <label asp-for="@Model.Username"></label>
                    <input type="text" asp-for="@Model.Username" class="form-control" placeholder="Enter username">
                    <span asp-validation-for="@Model.Username" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <i class="fa fa-unlock-alt"></i> <label asp-for="@Model.Password"></label>
                    <input type="password" asp-for="@Model.Password" class="form-control" placeholder="Enter password">
                    <span asp-validation-for="@Model.Password" class="invalid-feedback"></span>
                </div>
                <div class="form-group" style="padding-top: 10px">
                    <label class="form-check" asp-for="@Model.RememberMe">
                        <input asp-for="@Model.RememberMe" />
                        @Html.DisplayNameFor(m => m.RememberMe)
                    </label>
                </div>
                <button type="submit" class="btn btn-success">Login</button>
                <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary">Cancel</a>
                <div class="form-group" style="padding-top: 10px">
                    <p>
                        <a asp-controller="Account" asp-action="ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
                    </p>
                </div>
            </fieldset>
        </form>
    </div>
    <div class="col-md-6">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-action="ExternalLogin"
                          asp-route-returnurl="@ViewData["ReturnUrl"]"
                          method="post"
                          class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}